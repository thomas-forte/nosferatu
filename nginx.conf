# user                 www-data;
pid                  /run/nginx.pid;
worker_processes     auto;
worker_rlimit_nofile 65535;

# Load modules
# include              /etc/nginx/modules-enabled/*.conf;

events {
    multi_accept       on;
    worker_connections 65535;
}

http {
    charset                utf-8;
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    server_tokens          off;
    log_not_found          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   16M;

    # MIME
    include                mime.types;
    default_type           application/octet-stream;

    # Logging
    access_log             off;
    error_log              /dev/null;

    # SSL
    ssl_session_timeout    1d;
    ssl_session_cache      shared:SSL:10m;
    ssl_session_tickets    off;

    # Diffie-Hellman parameter for DHE ciphersuites
    ssl_dhparam            /etc/nginx/dhparam.pem;

    # Mozilla Intermediate configuration
    ssl_protocols          TLSv1.2 TLSv1.3;
    ssl_ciphers            ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # OCSP Stapling
    ssl_stapling           on;
    ssl_stapling_verify    on;
    resolver               1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
    resolver_timeout       2s;

    # Load configs
    # include                /etc/nginx/conf.d/*.conf;
    # include                /etc/nginx/sites-enabled/*;

	# server {
	# 	listen                  443 ssl http2;
	# 	listen                  [::]:443 ssl http2;
	# 	server_name             example.com;
	# 	set                     $base /var/www/example.com;

	# 	# SSL
	# 	ssl_certificate         /etc/letsencrypt/live/example.com/fullchain.pem;
	# 	ssl_certificate_key     /etc/letsencrypt/live/example.com/privkey.pem;
	# 	ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;

	# 	# security
	# 	include                 nginxconfig.io/security.conf;

	# 	# logging
	# 	access_log              /var/log/nginx/access.log combined buffer=512k flush=1m;
	# 	error_log               /var/log/nginx/error.log warn;

	# 	location / {
	# 		include nginxconfig.io/python_uwsgi.conf;
	# 	}

	# 	# Django media
	# 	location /media/ {
	# 		alias $base/media/;
	# 	}

	# 	# Django static
	# 	location /static/ {
	# 		alias $base/static/;
	# 	}

	# 	# additional config
	# 	include nginxconfig.io/general.conf;
	# }

	# subdomains redirect
	# server {
	# 	listen                  443 ssl http2;
	# 	listen                  [::]:443 ssl http2;
	# 	server_name             *.example.com;

	# 	# SSL
	# 	ssl_certificate         /etc/letsencrypt/live/example.com/fullchain.pem;
	# 	ssl_certificate_key     /etc/letsencrypt/live/example.com/privkey.pem;
	# 	ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;
	# 	return                  301 https://example.com$request_uri;
	# }

	# HTTP redirect
	upstream nosferatu {
		server gunicorn:8000;
	}

	server {
		listen      80;
		# listen      [::]:80;
		# server_name .example.com;
		# include     nginxconfig.io/letsencrypt.conf;

		location / {
			proxy_pass http://nosferatu;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;
			proxy_redirect off;
		}

		location /static {
			alias /usr/src/app/static/;
		}
	}
}
